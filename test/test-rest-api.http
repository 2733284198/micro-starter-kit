@jsonType = application/json

### Create User
# @name CreateUser

POST {{api-gateway-url}}/rpc
content-type: {{jsonType}}
Accept: {{jsonType}}

{
    "service": "go.micro.srv.account",
    "method": "UserService.Create",
    "request": {
        "username": "sumo",
        "firstName": "sumo",
        "lastName": "demo",
        "email": "sumo@demo.com"
    }
}

### Create User 2
# @name CreateUser2

POST {{api-gateway-url}}/rpc
content-type: {{jsonType}}
Accept: {{jsonType}}

{
    "service": "go.micro.srv.account",
    "method": "UserService.Create",
    "request": {
        "username": "sumo1",
        "firstName": "sumo1",
        "lastName": "demo1",
        "email": "sumo1@demo.com"
    }
}

### List User
# @name ListUser
POST {{api-gateway-url}}/rpc
content-type: {{jsonType}}
Accept: {{jsonType}}

{
    "service": "go.micro.srv.account",
    "method": "UserService.List",
    "request": {
    }
}

### List User 2
# @name ListUser2
POST {{api-gateway-url}}/rpc
content-type: {{jsonType}}
Accept: {{jsonType}}

{
    "service": "go.micro.srv.account",
    "method": "UserService.List",
    "request": {
        "limit": 10,
        "page": 1
    }
}

### List User 3
# @name ListUser3
POST {{api-gateway-url}}/rpc
content-type: {{jsonType}}
Accept: {{jsonType}}

{
    "service": "go.micro.srv.account",
    "method": "UserService.List",
    "request": {
        "limit": 10,
        "page": 1,
        "sort" : "username",
        "lastName": "demo",
        "email": "sumo@demo.com"
    }
}

@firstUserId = {{ListUser.response.body.results[0].id}}

### Get User
# @name GetUser
POST {{api-gateway-url}}/rpc
content-type: {{jsonType}}
Accept: {{jsonType}}

{
    "service": "go.micro.srv.account",
    "method": "UserService.Get",
    "request": {
        "id":  {{firstUserId}}
    }
}

### Exist User
# @name ExistUser
POST {{api-gateway-url}}/rpc
content-type: {{jsonType}}
Accept: {{jsonType}}

{
    "service": "go.micro.srv.account",
    "method": "UserService.Exist",
    "request": {
        "username": "sumo",
        "firstName": "sumo",
        "lastName": "demo",
        "email": "sumo@demo.com"
    }
}

### Update User
# @name UpdateUser
POST {{api-gateway-url}}/rpc
content-type: {{jsonType}}
Accept: {{jsonType}}

{
    "service": "go.micro.srv.account",
    "method": "UserService.Update",
    "request": {
        "id": {{firstUserId}},
        "username": "sumo222",
        "firstName": "sumoto222",
        "lastName": "demo222",
        "email": "sumo222@demo.com"
    }
}


### Delete User
# @name DeleteUser
POST {{api-gateway-url}}/rpc
content-type: {{jsonType}}
Accept: {{jsonType}}

{
    "service": "go.micro.srv.account",
    "method": "UserService.Delete",
    "request": {
        "id": {{firstUserId}}
    }
}

### Profile Test

### Create Profile
# @name CreateProfile
POST {{api-gateway-url}}/rpc
content-type: {{jsonType}}
Accept: {{jsonType}}

{
    "service": "go.micro.srv.account",
    "method": "ProfileService.Create",
    "request": {
        "user_id": {{firstUserId}},
        "tz" : "PST",
        "avatar": "sumo1.jpg",
        "gender": "F"
    }
}

### List Profiles
# @name ListProfile
POST {{api-gateway-url}}/rpc
content-type: {{jsonType}}
Accept: {{jsonType}}

{
    "service": "go.micro.srv.account",
    "method": "ProfileService.List",
    "request": {
    }
}

@firstProfileId = {{ListProfile.response.body.results[1].id}}

### List Profiles 2
# @name ListProfile2
POST {{api-gateway-url}}/rpc
content-type: {{jsonType}}
Accept: {{jsonType}}

{
    "service": "go.micro.srv.account",
    "method": "ProfileService.List",
    "request": {
        "limit": 10,
        "page": 1,
        "sort" : "gender",
        "user_id": {{firstUserId}},
        "gender": "F"
    }
}


### Get Profile
# @name GetProfile
POST {{api-gateway-url}}/rpc
content-type: {{jsonType}}
Accept: {{jsonType}}

{
    "service": "go.micro.srv.account",
    "method": "ProfileService.Get",
    "request": {
       "id": 1
    }
}
